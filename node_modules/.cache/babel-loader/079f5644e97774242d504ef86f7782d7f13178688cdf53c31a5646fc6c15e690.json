{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useState, useMemo, useEffect } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\n// import { Typography } from \"@mui/material\";\n\n//color design tokens\n\nexport const tokens = mode => ({\n  ...(mode === 'dark' ? {\n    //if mode = dark\n    lightBlue: {\n      100: \"#cceef3\",\n      200: \"#99dde7\",\n      300: \"#66cddb\",\n      400: \"#33bccf\",\n      500: \"#00abc3\",\n      600: \"#00899c\",\n      700: \"#006775\",\n      800: \"#00444e\",\n      900: \"#002227\"\n    },\n    white: {\n      100: \"#ffffff\",\n      200: \"#ffffff\",\n      300: \"#ffffff\",\n      400: \"#ffffff\",\n      500: \"#333333\",\n      600: \"#cccccc\",\n      700: \"#999999\",\n      800: \"#666666\",\n      900: \"#333333\"\n    },\n    darkBlue: {\n      100: \"#ced8e3\",\n      200: \"#9eb1c7\",\n      300: \"#6d8aab\",\n      400: \"#3d638f\",\n      500: \"#0c3c73\",\n      600: \"#0a305c\",\n      700: \"#072445\",\n      800: \"#05182e\",\n      900: \"#020c17\"\n    },\n    navbar: {\n      100: \"#dedef0\",\n      200: \"#bdbde0\",\n      300: \"#9c9cd1\",\n      400: \"#7b7bc1\",\n      900: \"#5a5ab2\",\n      600: \"#48488e\",\n      700: \"#36366b\",\n      800: \"#242447\",\n      500: \"#121224\"\n    }\n  } : {\n    //if mode = light\n    lightBlue: {\n      100: \"#002227\",\n      200: \"#00444e\",\n      300: \"#006775\",\n      400: \"#00899c\",\n      500: \"#00abc3\",\n      600: \"#33bccf\",\n      700: \"#66cddb\",\n      800: \"#99dde7\",\n      900: \"#cceef3\"\n    },\n    darkBlue: {\n      100: \"#020c17\",\n      200: \"#05182e\",\n      300: \"#072445\",\n      400: \"#0a305c\",\n      500: \"#0c3c73\",\n      600: \"#3d638f\",\n      700: \"#6d8aab\",\n      800: \"#9eb1c7\",\n      900: \"#ced8e3\"\n    },\n    white: {\n      100: \"#333333\",\n      200: \"#666666\",\n      300: \"#999999\",\n      400: \"#cccccc\",\n      500: \"#ffffff\",\n      600: \"#ffffff\",\n      700: \"#ffffff\",\n      800: \"#ffffff\",\n      900: \"#ffffff\"\n    },\n    navbar: {\n      100: \"#121224\",\n      200: \"#242447\",\n      300: \"#36366b\",\n      400: \"#48488e\",\n      500: \"#5a5ab2\",\n      600: \"#7b7bc1\",\n      700: \"#9c9cd1\",\n      800: \"#bdbde0\",\n      900: \"#dedef0\"\n    }\n  })\n});\n\n//material ui theme settings\nexport const themeSettings = mode => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      // Corrected typo here\n      mode: mode,\n      ...(mode === 'dark' ? {\n        primary: {\n          main: colors.darkBlue[100]\n        },\n        secondary: {\n          main: colors.lightBlue[100]\n        },\n        background: {\n          default: colors.darkBlue[300]\n        }\n      } : {\n        primary: {\n          main: colors.lightBlue[900]\n        },\n        secondary: {\n          main: colors.darkBlue[900]\n        },\n        background: {\n          default: colors.white[500]\n        }\n        //navbar: {\n        //   default: colors.\n        // }\n      })\n    },\n    typography: {\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      navbarItem: {\n        fontFamily: \"Source Sans Pro, sans-serif\",\n        fontSize: 14,\n        fontWeight: 600,\n        color: mode === 'dark' ? colors.white[100] : colors.darkBlue[900] // Change font color based on mode\n      }\n    }\n  };\n};\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nexport const useMode = () => {\n  _s();\n  const [mode, setMode] = useState(() => {\n    const savedMode = localStorage.getItem(\"colorMode\");\n    return savedMode ? savedMode : \"dark\";\n  });\n  useEffect(() => {\n    localStorage.setItem(\"colorMode\", mode);\n  }, [mode]);\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => setMode(prev => prev === \"light\" ? \"dark\" : \"light\")\n  }), []);\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n_s(useMode, \"WDcFp6t91Ds6JGyBjM5UqbzElGc=\");","map":{"version":3,"names":["createContext","useState","useMemo","useEffect","createTheme","tokens","mode","lightBlue","white","darkBlue","navbar","themeSettings","colors","palette","primary","main","secondary","background","default","typography","fontFamily","join","fontSize","navbarItem","fontWeight","color","ColorModeContext","toggleColorMode","useMode","_s","setMode","savedMode","localStorage","getItem","setItem","colorMode","prev","theme"],"sources":["C:/Users/lhmg2/Repositorios/fastFrontend/src/theme.js"],"sourcesContent":["import { createContext, useState, useMemo, useEffect } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n// import { Typography } from \"@mui/material\";\r\n\r\n\r\n\r\n//color design tokens\r\n\r\n\r\nexport const tokens = (mode) => ({\r\n...(mode === 'dark' ? {\r\n//if mode = dark\r\nlightBlue: {\r\n  100: \"#cceef3\",\r\n  200: \"#99dde7\",\r\n  300: \"#66cddb\",\r\n  400: \"#33bccf\",\r\n  500: \"#00abc3\",\r\n  600: \"#00899c\",\r\n  700: \"#006775\",\r\n  800: \"#00444e\",\r\n  900: \"#002227\"\r\n},\r\nwhite: {\r\n  100: \"#ffffff\",\r\n  200: \"#ffffff\",\r\n  300: \"#ffffff\",\r\n  400: \"#ffffff\",\r\n  500: \"#333333\",\r\n  600: \"#cccccc\",\r\n  700: \"#999999\",\r\n  800: \"#666666\",\r\n  900: \"#333333\"\r\n},\r\ndarkBlue: {\r\n  100: \"#ced8e3\",\r\n  200: \"#9eb1c7\",\r\n  300: \"#6d8aab\",\r\n  400: \"#3d638f\",\r\n  500: \"#0c3c73\",\r\n  600: \"#0a305c\",\r\n  700: \"#072445\",\r\n  800: \"#05182e\",\r\n  900: \"#020c17\"\r\n},\r\nnavbar: {\r\n  100: \"#dedef0\",\r\n  200: \"#bdbde0\",\r\n  300: \"#9c9cd1\",\r\n  400: \"#7b7bc1\",\r\n  900: \"#5a5ab2\",\r\n  600: \"#48488e\",\r\n  700: \"#36366b\",\r\n  800: \"#242447\",\r\n  500: \"#121224\"\r\n},\r\n} : {\r\n//if mode = light\r\nlightBlue: {\r\n  100: \"#002227\",\r\n  200: \"#00444e\",\r\n  300: \"#006775\",\r\n  400: \"#00899c\",\r\n  500: \"#00abc3\",\r\n  600: \"#33bccf\",\r\n  700: \"#66cddb\",\r\n  800: \"#99dde7\",\r\n  900: \"#cceef3\",\r\n},\r\ndarkBlue: {\r\n  100: \"#020c17\",\r\n  200: \"#05182e\",\r\n  300: \"#072445\",\r\n  400: \"#0a305c\",\r\n  500: \"#0c3c73\",\r\n  600: \"#3d638f\",\r\n  700: \"#6d8aab\",\r\n  800: \"#9eb1c7\",\r\n  900: \"#ced8e3\",\r\n},\r\nwhite: {\r\n  100: \"#333333\",\r\n  200: \"#666666\",\r\n  300: \"#999999\",\r\n  400: \"#cccccc\",\r\n  500: \"#ffffff\",\r\n  600: \"#ffffff\",\r\n  700: \"#ffffff\",\r\n  800: \"#ffffff\",\r\n  900: \"#ffffff\",\r\n},\r\nnavbar: {\r\n    100: \"#121224\",\r\n    200: \"#242447\",\r\n    300: \"#36366b\",\r\n    400: \"#48488e\",\r\n    500: \"#5a5ab2\",\r\n    600: \"#7b7bc1\",\r\n    700: \"#9c9cd1\",\r\n    800: \"#bdbde0\",\r\n    900: \"#dedef0\",\r\n},\r\n})\r\n})\r\n\r\n//material ui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: { // Corrected typo here\r\n      mode: mode,\r\n      ...(mode === 'dark' ? {\r\n        primary: {\r\n          main: colors.darkBlue[100],\r\n        },\r\n        secondary: {\r\n          main: colors.lightBlue[100],\r\n        },\r\n        background: {\r\n          default: colors.darkBlue[300],\r\n        },\r\n        \r\n      } : {\r\n            primary: {\r\n              main: colors.lightBlue[900],\r\n            },\r\n            secondary: {\r\n              main: colors.darkBlue[900],\r\n            },\r\n            background: {\r\n              default: colors.white[500],\r\n            },\r\n            //navbar: {\r\n        //   default: colors.\r\n        // }\r\n      }\r\n    ),\r\n    },\r\n    typography: {\r\n      fontFamily: [\r\n        \"Source Sans Pro\",\r\n        \"sans-serif\"\r\n      ].join(\",\"),\r\n      fontSize: 12,\r\n      navbarItem: {\r\n        fontFamily: \"Source Sans Pro, sans-serif\",\r\n        fontSize: 14,\r\n        fontWeight: 600,\r\n        color: mode === 'dark' ? colors.white[100] : colors.darkBlue[900], // Change font color based on mode\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {}\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(() => {\r\n    const savedMode = localStorage.getItem(\"colorMode\");\r\n    return savedMode ? savedMode : \"dark\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"colorMode\", mode);\r\n  }, [mode]);\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}